[
    {
        "title": "엔드 디바이스 관리 플랫폼 ThingWire 설계, 개발",
        "subtitle": "[한국전자기술연구원] 2023.04 ~ ",
        "contents": [
            {
                "title": "개요",
                "content": [
                    "팀 내에서 사용하는 모든 엔드 디바이스 장치 (AI서버, 데이터 수집서버, IoT 장치등)를 관리하기 위한 웹 플랫폼 설계 및 개발",
                    "해당 플랫폼으로 장치(IoT)의 설정정보를 변경하거나, 장치들을 논리적으로 조직화해 모니터링을 도와주고 웹을 통한 SSH 접속으로 관리를 수월하게 하기 위함"
                ]
            },
            {
                "title": "역할",
                "content": [                        
                    "클라이언트에서 모든 컴포넌트를 분리하고, 서버에서 설정변경만으로 컴포넌트와 레이아웃을 변경할 수 있는 웹 프레임워크 설계 및 개발",                        
                    "수많은 Unreachable Network의 IoT 장치들과 통신하기 위한 프로토콜 설계 및 개발",
                    "웹으로 SSH접속을 하기 위한 프로토콜 설계 및 개발",
                    "웹으로 IoT 장치의 설정 정보를 변경하기 위한 프로토콜 설계 및 개발"
                ]
            },
            {
                "title": "알게된 점",
                "content": [                    
                    "CJS, ESM 모듈간 차이와, 양측 모두 대응할 수 있는 라이브러리를 개발하는 능력",
                    "Production 환경에서 네트워크문제는 언제든 생길 수 있다는점과 이를 극복하는 방법",
                    "무분별한 Retry는 오히려 서비스에 악영향을 끼칠 수 있다는점"
                ]
            },
            {
                "title": "사용 기술",
                "content": [
                    "Typescript, Express, React, RaspberryPi, Redis, Mariadb, Docker"
                ]
            }
        ]
    },
    {
        "title": "빅데이터 플랫폼 데이터 수집, 적재 파트 설계 및 개발",
        "subtitle": "[한국전자기술연구원] 2023.03 ~ ",
        "contents": [
            {
                "title": "개요",
                "content": [
                    "빅데이터를 플랫폼내에서 동작하는 데이터 수집 부분, 데이터 적재 부분 설계 및 개발"
                ]
            },
            {
                "title": "역할",
                "content": [                        
                    "[수집파트] 실시간성과 높은 수집 성공률을 확보해야 했으므로 실시간 수집레이어와, 수집 실패 데이터에 대한 복구레이어 2레이어로 설계",
                    "[수집파트] API 특징에 따른 수집 정책과 복구 정책 설계 및 개발",
                    "[적재파트] 수집속도보다 적재속도가 느렸기 때문에 Kafka Consumer Group을 통한 수평확장으로 이를 해결",
                    "[공통] Redis 센티넬을 구축하여 가용성을 확보"
                ]
            },
            {
                "title": "알게된 점",
                "content": [                    
                    ""
                ]
            },
            {
                "title": "사용 기술",
                "content": [
                    "Typescript, Kafka, Redis, OpenTSDB"                        
                ]
            }
        ]
    },
    {
        "title": "환경 데이터 수집 서비스 소스코드 리팩토링",
        "subtitle": "[한국전자기술연구원] 2021.08 ~ 2022.01",
        "contents": [
            {
                "title": "개요",
                "content": [
                    "외부 REST API로 환경 데이터를 수집하는 NodeJS(Javascript) 서비스 소스코드를 Typescript로 전환하고, 코드를 개선하는 작업"
                ]
            },
            {
                "title": "역할",
                "content": [
                    "Retry 로직 개선 및 수집 실패 데이터 복구로직을 만들어 데이터 수집 성공률 향상",
                    "Javascript 코드를 Typescript로 전환",
                    "레거시 코드개선 (ex var, callback) 및 소스코드 모듈화"
                ]
            },
            {
                "title": "알게된 점",
                "content": [                    
                    "CJS, ESM 모듈간 차이와, 양측 모두 대응할 수 있는 라이브러리를 개발하는 능력",
                    "Production 환경에서 네트워크문제는 언제든 생길 수 있다는점과 이를 극복하는 방법",
                    "무분별한 Retry는 오히려 서비스에 악영향을 끼칠 수 있다는점과 "
                ]
            },
            {
                "title": "사용 기술",
                "content": [
                    "Javascript, Typescript, Npm Workspaces, Redis"                        
                ]
            }
        ]
    },       
    {
        "title": "웹기반 기상데이터 시각화 GIS 서비스 설계, 구현",
        "subtitle": "[한국전자기술연구원] 2021.02 ~ 2021.08",
        "contents": [
            {
                "title": "개요",
                "content": [
                    "기업의 기상데이터를 웹상에 지도와 함께 애니메이션, 히트맵으로 시각화 하는 프로젝트"
                ]
            },
            {
                "title": "역할",
                "content": [
                    "프론트엔드에서 렌더링 속도 향상 및 서버로부터 데이터 전달 속도를 높히기 위해 RAW 데이터를 보간, 가공처리",
                    "동일한 수준의 데이터 전송속도가 약 500ms에서 50ms로 향상, 클라이언트 렌더링가 속도가 약 1000ms에서 50ms로 향상", 
                    "UX를 저해하지 않으며 데이터를 효율적으로 가져오기 위한 REST API 설계 및 개발"
                ]
            },
            {
                "title": "알게된 점",
                "content": [
                    "Javascript의 클로저에 대해 공부하게 되었고, 이를 활용할 수 있게됨",                            
                    "개발자의 입장이 아닌, 사용자의 입장에서 UX를 생각해보는 계기가 됨",
                    "커뮤니케이션 능력 향상"
                ]
            },
            {
                "title": "사용 기술",
                "content": [
                    "HTML, CSS, VanilaJS, Python (Flask)"                        
                ]
            }
        ]
    }
]